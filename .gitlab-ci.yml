stages:
  - unit test
  - deploy dev
  - integration test

Unit Tests:
  stage: unit test
  image: python:3.8
  variables:
    GOOGLE_CREDENTIALS: $GOOGLE_CREDENTIALS_DEV
    GOOGLE_PROJECT_ID: $GOOGLE_PROJECT_ID_DEV
    GOOGLE_REGION: $GOOGLE_REGION_DEV
  script:
    - pip install -r requirements.txt
    - flake8 .
    - pytest -v -m "not integration"

Deploy DEV (gcloud):
  stage: deploy dev
  image: google/cloud-sdk:alpine
  variables:
    GOOGLE_CREDENTIALS: $GOOGLE_CREDENTIALS_DEV
    GOOGLE_PROJECT_ID: $GOOGLE_PROJECT_ID_DEV
    GOOGLE_REGION: $GOOGLE_REGION_DEV
    GOOGLE_SERVICE_ACCOUNT_EMAIL: $GOOGLE_SERVICE_ACCOUNT_EMAIL_DEV
  script:
    - ./ingestion/publish_tweet_requests/deploy.sh
    - ./ingestion/request_tweets/deploy.sh
    - ./dataflow/compute_sentiment_trigger/deploy.sh

Deploy DEV (python):
  stage: deploy dev
  image: python:3.8
  variables:
    GOOGLE_PROJECT_ID: $GOOGLE_PROJECT_ID_DEV
    GOOGLE_REGION: $GOOGLE_REGION_DEV
  script:
  
    - echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    - sudo apt-get install apt-transport-https ca-certificates gnupg
    - echo "deb https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    - sudo apt-get update && sudo apt-get install google-cloud-sdk

    - pip install virtualenv
    - ./dataflow/compute_sentiment_pipeline/deploy.sh

Integration Tests:
  stage: integration test
  image: python:3.8
  variables:
    GOOGLE_CREDENTIALS: $GOOGLE_CREDENTIALS_DEV
    GOOGLE_PROJECT_ID: $GOOGLE_PROJECT_ID_DEV
    GOOGLE_REGION: $GOOGLE_REGION_DEV
    GOOGLE_SERVICE_ACCOUNT_EMAIL: $GOOGLE_SERVICE_ACCOUNT_EMAIL_DEV
  script:
    - pip install -r requirements.txt
    - pytest -v -m "integration" ingestion
    - pytest -v -m "integration" dataflow
